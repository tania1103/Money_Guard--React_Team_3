{"version":3,"file":"static/js/500.721e8208.chunk.js","mappings":"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","sources":["../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","i","key","descriptor","e","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","binarySearch","metaset","spanGaps","lookupMethod","_reversePixels","distanceToDefinedLo","findIndex","distanceToDefinedHi","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","next","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","camelMethod","PluginService","_init","notify","hook","_createDescriptors","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineCap","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","previous","sameItem","itemsEqual","_element","_args","afterEvent","ci","useBorderRadius","borderCapStyle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_getLabelForValue","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","for","q","u","$$typeof","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Doughnut"],"sourceRoot":""}